// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Prestamos.Backend.Models;

#nullable disable

namespace Prestamos.Backend.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Prestamos.Backend.Models.Accionista", b =>
                {
                    b.Property<int>("IdAccionista")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdAccionista"));

                    b.Property<int>("IdPersona")
                        .HasColumnType("integer");

                    b.Property<int?>("PersonaIdPersona")
                        .HasColumnType("integer");

                    b.Property<string>("PrimerNombre")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("SegundoNombre")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.HasKey("IdAccionista");

                    b.HasIndex("PersonaIdPersona");

                    b.ToTable("Accionista");
                });

            modelBuilder.Entity("Prestamos.Backend.Models.DatoFiscal", b =>
                {
                    b.Property<int>("IdDatoFiscal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdDatoFiscal"));

                    b.Property<string>("ActividadCNBV")
                        .HasColumnType("text");

                    b.Property<string>("ActividadEco")
                        .HasColumnType("text");

                    b.Property<string>("ActividadSAT")
                        .HasColumnType("text");

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("text");

                    b.Property<string>("Colonia")
                        .HasColumnType("text");

                    b.Property<string>("DomicilioFiscal")
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .HasColumnType("text");

                    b.Property<DateOnly>("FechaAltaSAT")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaIniOps")
                        .HasColumnType("date");

                    b.Property<int>("IdPersona")
                        .HasColumnType("integer");

                    b.Property<string>("Municipio")
                        .HasColumnType("text");

                    b.Property<string>("NombrNegocio")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<int?>("PersonaIdPersona")
                        .HasColumnType("integer");

                    b.Property<string>("SerieFiel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("pais")
                        .HasColumnType("text");

                    b.Property<string>("regimenfiscal")
                        .HasColumnType("text");

                    b.Property<string>("rfc")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.HasKey("IdDatoFiscal");

                    b.HasIndex("PersonaIdPersona");

                    b.ToTable("DatoFiscals");
                });

            modelBuilder.Entity("Prestamos.Backend.Models.DatoPersonal", b =>
                {
                    b.Property<int>("IdDatoPersonal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdDatoPersonal"));

                    b.Property<string>("CasadoCon")
                        .HasColumnType("text");

                    b.Property<int>("IdPersona")
                        .HasColumnType("integer");

                    b.Property<string>("Ocupacion")
                        .HasColumnType("text");

                    b.Property<int?>("PersonaIdPersona")
                        .HasColumnType("integer");

                    b.Property<string>("estadocivil")
                        .HasColumnType("text");

                    b.Property<string>("regimenconyugal")
                        .HasColumnType("text");

                    b.HasKey("IdDatoPersonal");

                    b.HasIndex("PersonaIdPersona");

                    b.ToTable("DatoPersonals");
                });

            modelBuilder.Entity("Prestamos.Backend.Models.Domicilio", b =>
                {
                    b.Property<int>("IdDomicilio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdDomicilio"));

                    b.Property<string>("CodPostal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Colonia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("IdPersona")
                        .HasColumnType("integer");

                    b.Property<string>("Municipio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nacionalidad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NoExt")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("character varying(6)");

                    b.Property<string>("NoInt")
                        .HasMaxLength(6)
                        .HasColumnType("character varying(6)");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("PersonaIdPersona")
                        .HasColumnType("integer");

                    b.Property<string>("Referencia")
                        .HasMaxLength(6)
                        .HasColumnType("character varying(6)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdDomicilio");

                    b.HasIndex("PersonaIdPersona");

                    b.ToTable("Domicilios");
                });

            modelBuilder.Entity("Prestamos.Backend.Models.Persona", b =>
                {
                    b.Property<int>("IdPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdPersona"));

                    b.Property<string>("ApMaterno")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("ApPaterno")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date");

                    b.Property<string>("PrimerNombre")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("RazonSocial")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("SegundoNombre")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("TipoSociedad")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("curp")
                        .HasMaxLength(18)
                        .HasColumnType("character varying(18)");

                    b.Property<int?>("genero")
                        .HasColumnType("integer");

                    b.Property<string>("rfc")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.Property<int>("tipoper")
                        .HasColumnType("integer");

                    b.HasKey("IdPersona");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("Prestamos.Backend.Models.RepresentanteLegal", b =>
                {
                    b.Property<int>("IdRepresentanteLegal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdRepresentanteLegal"));

                    b.Property<string>("ApMaterno")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("ApPaterno")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("Cargo")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("IDActConst")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<int>("IdPersona")
                        .HasColumnType("integer");

                    b.Property<int?>("PersonaIdPersona")
                        .HasColumnType("integer");

                    b.Property<string>("PrimerNombre")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("SegundoNombre")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("TipoRepresentante")
                        .HasColumnType("text");

                    b.HasKey("IdRepresentanteLegal");

                    b.HasIndex("PersonaIdPersona");

                    b.ToTable("RepresentanteLegals");
                });

            modelBuilder.Entity("Prestamos.Backend.Models.Accionista", b =>
                {
                    b.HasOne("Prestamos.Backend.Models.Persona", null)
                        .WithMany("Accionistas")
                        .HasForeignKey("PersonaIdPersona");
                });

            modelBuilder.Entity("Prestamos.Backend.Models.DatoFiscal", b =>
                {
                    b.HasOne("Prestamos.Backend.Models.Persona", null)
                        .WithMany("DatosFiscales")
                        .HasForeignKey("PersonaIdPersona");
                });

            modelBuilder.Entity("Prestamos.Backend.Models.DatoPersonal", b =>
                {
                    b.HasOne("Prestamos.Backend.Models.Persona", null)
                        .WithMany("DatosPersonales")
                        .HasForeignKey("PersonaIdPersona");
                });

            modelBuilder.Entity("Prestamos.Backend.Models.Domicilio", b =>
                {
                    b.HasOne("Prestamos.Backend.Models.Persona", null)
                        .WithMany("Domicilios")
                        .HasForeignKey("PersonaIdPersona");
                });

            modelBuilder.Entity("Prestamos.Backend.Models.RepresentanteLegal", b =>
                {
                    b.HasOne("Prestamos.Backend.Models.Persona", null)
                        .WithMany("RepresentanteLegals")
                        .HasForeignKey("PersonaIdPersona");
                });

            modelBuilder.Entity("Prestamos.Backend.Models.Persona", b =>
                {
                    b.Navigation("Accionistas");

                    b.Navigation("DatosFiscales");

                    b.Navigation("DatosPersonales");

                    b.Navigation("Domicilios");

                    b.Navigation("RepresentanteLegals");
                });
#pragma warning restore 612, 618
        }
    }
}
